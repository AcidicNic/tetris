{"version":3,"sources":["actions/index.js","utils/index.js","reducers/game-reducer.js","reducers/index.js","components/GridSquare.js","components/GridBoard.js","components/NextBlock.js","components/ScoreBoard.js","components/Controls.js","components/MessagePopup.js","App.js","index.js"],"names":["PAUSE","RESUME","MOVE_LEFT","MOVE_RIGHT","ROTATE","ROTATE_PREV","MOVE_DOWN","GAME_OVER","RESTART","moveRight","type","moveLeft","rotate","moveDown","pause","resume","restart","gridDefault","array","row","push","col","controlKeys","left","right","down","rotatePrev","shapes","randomShape","min","max","length","Math","floor","random","defaultState","grid","shape","rotation","x","y","nextShape","isRunning","score","speed","gameOver","lines","level","nextRotation","prevRotation","canMoveTo","currentShape","console","log","gridWidth","gridHeight","proposedX","proposedY","possibleRow","undefined","addBlockToGrid","blockOffGrid","block","newGrid","checkRows","completedRows","indexOf","splice","unshift","Array","fill","points","calculateLevel","linesCleared","calculateSpeed","gameReducer","state","action","newCwRotation","newCcwRotation","maybeY","obj","newState","newScore","reducers","combineReducers","game","GridSquare","props","classes","color","className","GridBoard","requestRef","useRef","lastUpdateTimeRef","progressTimeRef","dispatch","useDispatch","useSelector","blockColor","gridSquares","map","rowArray","square","blockX","blockY","k","update","time","current","requestAnimationFrame","deltaTime","useEffect","cancelAnimationFrame","NextBlock","ScoreBoard","onClick","e","Controls","document","addEventListener","handleKeyDown","removeEventListener","defaultPrevented","includes","key","preventDefault","disabled","src","process","alt","MessagePopup","message","isHidden","store","createStore","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"mNAAaA,EAAe,QACfC,EAAe,SACfC,EAAe,YACfC,EAAe,aACfC,EAAe,SACfC,EAAe,cACfC,EAAe,YACfC,EAAe,YACfC,EAAe,UAEfC,EAAY,WACvB,MAAO,CAAEC,KAAMP,IAGJQ,EAAW,WACtB,MAAO,CAAED,KAAMR,IAGJU,EAAS,WACpB,MAAO,CAAEF,KAAMN,IAOJS,EAAW,WACtB,MAAO,CAAEH,KAAMJ,IAGJQ,EAAQ,WACnB,MAAO,CAAEJ,KAAMV,IAGJe,EAAS,WACpB,MAAO,CAAEL,KAAMT,IAGJe,EAAU,WACrB,MAAO,CAAEN,KAAMF,I,OCnCJS,EAAc,WAKzB,IAJA,IAEMC,EAAQ,GAELC,EAAM,EAAGA,EAJL,GAIiBA,IAAO,CACjCD,EAAME,KAAK,IACX,IAAK,IAAIC,EAAM,EAAGA,EALT,GAKqBA,IAC5BH,EAAMC,GAAKC,KAAK,GAItB,OAAOF,GAGII,EAAc,CACzBC,KAAM,CAAC,YAAa,OAAQ,KAC5BC,MAAO,CAAC,aAAc,QAAS,KAC/BC,KAAM,CAAC,YAAa,OAAQ,KAC5Bb,OAAQ,CAAC,UAAW,KAAM,IAAK,KAC/Bc,WAAY,CAAC,IAAK,KAClBZ,MAAO,CAAC,SAAU,SAClBC,OAAQ,CAAC,SAAU,SACnBC,QAAS,CAAC,IAAK,UAGJW,EAAS,CAEpB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,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","file":"static/js/main.d8d9d29a.chunk.js","sourcesContent":["export const PAUSE        = \"PAUSE\"       // Pause the game\nexport const RESUME       = \"RESUME\"      // Resume a paused game\nexport const MOVE_LEFT    = \"MOVE_LEFT\"   // Move piece left\nexport const MOVE_RIGHT   = \"MOVE_RIGHT\"  // Move piece right\nexport const ROTATE       = \"ROTATE\"      // Rotate piece\nexport const ROTATE_PREV  = \"ROTATE_PREV\"      // Rotate piece\nexport const MOVE_DOWN    = \"MOVE_DOWN\"   // Move piece down\nexport const GAME_OVER    = \"GAME_OVER\"   // The game is over\nexport const RESTART      = \"RESTART\"     // Restart Game\n\nexport const moveRight = () => {\n  return { type: MOVE_RIGHT }\n}\n\nexport const moveLeft = () => {\n  return { type: MOVE_LEFT }\n}\n\nexport const rotate = () => {\n  return { type: ROTATE }\n}\n\nexport const rotatePrev = () => {\n  return { type: ROTATE_PREV }\n}\n\nexport const moveDown = () => {\n  return { type: MOVE_DOWN }\n}\n\nexport const pause = () => {\n  return { type: PAUSE }\n}\n\nexport const resume = () => {\n  return { type: RESUME }\n}\n\nexport const restart = () => {\n  return { type: RESTART }\n}\n","export const random = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport const gridDefault = () => {\n  const rows = 18\n  const cols = 10\n  const array = []\n\n  for (let row = 0; row < rows; row++) {\n      array.push([])\n      for (let col = 0; col < cols; col++) {\n        array[row].push(0)\n      }\n  }\n\n  return array\n}\n\nexport const controlKeys = {\n  left: [\"ArrowLeft\", \"Left\", \"a\"],\n  right: [\"ArrowRight\", \"Right\", \"d\"],\n  down: [\"ArrowDown\", \"Down\", \"s\"],\n  rotate: [\"ArrowUp\", \"Up\", \"w\", \"x\"],\n  rotatePrev: [\"q\", \"z\"],\n  pause: [\"Escape\", \"Enter\"],\n  resume: [\"Escape\", \"Enter\"],\n  restart: [\" \", \"Enter\"]\n}\n\nexport const shapes = [\n  // none\n  [[[0,0,0,0],\n    [0,0,0,0],\n    [0,0,0,0],\n    [0,0,0,0]]],\n\n  // I\n  [[[0,0,0,0],\n    [1,1,1,1],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,0,0],\n    [0,1,0,0],\n    [0,1,0,0]]],\n\n  // T\n  [[[0,0,0,0],\n    [1,1,1,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [1,1,0,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [1,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,1,0],\n    [0,1,0,0],\n    [0,0,0,0]]],\n\n  // L\n  [[[0,0,0,0],\n    [1,1,1,0],\n    [1,0,0,0],\n    [0,0,0,0]],\n\n   [[1,1,0,0],\n    [0,1,0,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,0,1,0],\n    [1,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,0,0],\n    [0,1,1,0],\n    [0,0,0,0]]],\n\n  // J\n  [[[1,0,0,0],\n    [1,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,1,0],\n    [0,1,0,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,0,0,0],\n    [1,1,1,0],\n    [0,0,1,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,0,0],\n    [1,1,0,0],\n    [0,0,0,0]]],\n\n  // Z\n  [[[0,0,0,0],\n    [1,1,0,0],\n    [0,1,1,0],\n    [0,0,0,0]],\n\n   [[0,0,1,0],\n    [0,1,1,0],\n    [0,1,0,0],\n    [0,0,0,0]]],\n\n  // S\n  [[[0,0,0,0],\n    [0,1,1,0],\n    [1,1,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,1,0],\n    [0,0,1,0],\n    [0,0,0,0]]],\n\n  // O\n  [[[0,1,1,0],\n    [0,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]]]\n]\n\nexport const randomShape = () => {\n  return random(1, shapes.length - 1)\n}\n\nexport const defaultState = () => {\n  return {\n    // Create an empty grid\n    grid: gridDefault(),\n    // Get a new random shape\n    shape: randomShape(),\n    // set rotation of the shape to 0\n    rotation: 0,\n    // center of the grid, above the top\n    x: 4,\n    y: -4,\n    // set the index of the next shape to a new random shape\n    nextShape: randomShape(),\n    // Tell the game that it's currently running\n    isRunning: true,\n    // Set the score to 0\n    score: 0,\n    // Set the default speed\n    speed: 1000,\n    // Game isn't over yet\n    gameOver: false,\n    // Rows completed\n    lines: 0,\n    // level\n    level: 0\n  }\n}\n\nexport const nextRotation = (shape, rotation) => {\n  return (rotation + 1) % shapes[shape].length\n}\n\nexport const prevRotation = (shape, rotation) => {\n  if (rotation === 0) {\n    return shapes[shape].length - 1\n  }\n  return (rotation - 1) % shapes[shape].length\n}\n\nexport const canMoveTo = (shape, grid, x, y, rotation) => {\n  const currentShape = shapes[shape][rotation]\n  console.log(currentShape)\n\n  const gridWidth = grid[0].length - 1\n  const gridHeight = grid.length - 1\n\n  for (let row = 0; row < currentShape.length; row++) {\n    for (let col = 0; col < currentShape[row].length; col++) {\n      if (currentShape[row][col] !== 0) {\n        const proposedX = col + x\n        const proposedY = row + y\n        if (proposedY < 0) {\n          continue\n        }\n        const possibleRow = grid[proposedY]\n        if (proposedX < 0 || proposedX > gridWidth || proposedY > gridHeight) {\n          return false\n        } else if (possibleRow !== undefined) {\n          if (possibleRow[proposedX] !== 0) {\n            return false\n          }\n        }\n      }\n    }\n  }\n  return true\n}\n\nexport const addBlockToGrid = (shape, grid, x, y, rotation) => {\n  let blockOffGrid = false\n  const block = shapes[shape][rotation]\n  const newGrid = [ ...grid ]\n  for (let row = 0; row < block.length; row++) {\n    for (let col = 0; col < block[row].length; col++) {\n      if (block[row][col]) {\n        const yIndex = row + y\n        if (yIndex < 0) {\n          blockOffGrid = true\n        } else {\n          newGrid[row + y][col + x] = shape\n        }\n      }\n    }\n  }\n  return { grid: newGrid, gameOver: blockOffGrid }\n}\n\nexport const checkRows = (grid) => {\n  const points = [0, 40, 100, 300, 1200]\n  let completedRows = 0\n  for (let row = 0; row < grid.length; row++) {\n    if (grid[row].indexOf(0) === -1) {\n      completedRows += 1\n      grid.splice(row, 1)\n      grid.unshift(Array(10).fill(0))\n    }\n  }\n  return {points: points[completedRows], lines: completedRows}\n}\n\nexport const calculateLevel = (linesCleared) => {\n  return Math.floor(linesCleared / 4)\n}\n\nexport const calculateSpeed = (level) => {\n  if (level <= 18) {\n    return 1000 - (level * 50)\n  }\n  return 100\n}\n","import {\n  MOVE_RIGHT, MOVE_LEFT, MOVE_DOWN, ROTATE,\n  ROTATE_PREV, PAUSE, RESUME, RESTART, GAME_OVER\n} from '../actions'\n\nimport {\n  defaultState,\n  nextRotation,\n  prevRotation,\n  canMoveTo,\n  addBlockToGrid,\n  checkRows,\n  calculateLevel,\n  calculateSpeed\n} from '../utils'\n\nconst gameReducer = (state = defaultState(), action) => {\n  const { shape, grid, x, y, rotation, nextShape, score, isRunning, lines, level, speed } = state\n\n  switch(action.type) {\n      case ROTATE:\n        const newCwRotation = nextRotation(shape, rotation)\n        if (canMoveTo(shape, grid, x, y, newCwRotation)) {\n            return { ...state, rotation: newCwRotation }\n        }\n        return state\n\n      case ROTATE_PREV:\n        const newCcwRotation = prevRotation(shape, rotation)\n        if (canMoveTo(shape, grid, x, y, newCcwRotation)) {\n            return { ...state, rotation: newCcwRotation }\n        }\n        return state\n\n      case MOVE_RIGHT:\n        if (canMoveTo(shape, grid, x + 1, y, rotation)) {\n          return { ...state, x: x + 1 }\n        }\n        return state\n\n      case MOVE_LEFT:\n        if (canMoveTo(shape, grid, x - 1, y, rotation)) {\n          return { ...state, x: x - 1 }\n        }\n        return state\n\n      case MOVE_DOWN:\n        const maybeY = y + 1\n        if (canMoveTo(shape, grid, x, maybeY, rotation)) {\n          return { ...state, y: maybeY }\n        }\n        const obj = addBlockToGrid(shape, grid, x, y, rotation)\n        const newGrid = obj.grid\n        const gameOver = obj.gameOver\n\n        if (gameOver) {\n          const newState = { ...state }\n          newState.shape = 0\n          newState.grid = newGrid\n          return { ...state, gameOver: true }\n        }\n\n        const newState = defaultState()\n        newState.grid = newGrid\n        newState.shape = nextShape\n        newState.score = score\n        newState.isRunning = isRunning\n        newState.lines = lines\n        newState.level = level\n        newState.speed = speed\n\n        const newScore = checkRows(newGrid)\n        newState.score = score + (newScore.points * (level + 1))\n        newState.lines = lines + newScore.lines\n        newState.level = calculateLevel(newState.lines)\n        newState.speed = calculateSpeed(newState.level)\n\n        return newState\n\n      case RESUME:\n        return { ...state, isRunning: true }\n\n      case PAUSE:\n        return { ...state, isRunning: false }\n\n      case GAME_OVER:\n        return state\n\n      case RESTART:\n        return defaultState()\n\n      default:\n        return state\n    }\n}\nexport default gameReducer\n","import { combineReducers } from 'redux'\nimport gameReducer from './game-reducer'\n\n// The state handled by `gameReducer` will be stored with the property name `game` on the Redux store.\nconst reducers = combineReducers({\n  game: gameReducer\n})\n\nexport default reducers\n","import React from 'react'\n\n// Represents a grid square with a color\nexport default function GridSquare(props) {\n  const classes = `grid-square color-${props.color}`\n  return <div className={classes} />\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { moveDown } from '../actions'\nimport { shapes } from '../utils'\n\nimport GridSquare from './GridSquare'\n\n\nexport default function GridBoard(props) {\n  const requestRef = useRef()\n  const lastUpdateTimeRef = useRef(0)\n  const progressTimeRef = useRef(0)\n  const dispatch = useDispatch()\n  const game = useSelector((state) => state.game)\n  const { grid, shape, rotation, x, y, isRunning, speed } = game\n\n  const block = shapes[shape][rotation]\n  const blockColor = shape\n\n  const gridSquares = grid.map((rowArray, row) => {\n    return rowArray.map((square, col) => {\n\n      const blockX = col - x\n      const blockY = row - y\n      let color = square\n\n      if (blockX >= 0 && blockX < block.length && blockY >= 0 && blockY < block.length) {\n        color = block[blockY][blockX] === 0 ? color : blockColor\n      }\n\n      const k = row * grid[0].length + col;\n      return <GridSquare key={k} color={color} />\n    })\n  })\n\n  const update = (time) => {\n    requestRef.current = requestAnimationFrame(update)\n    if (!isRunning) {\n      return\n    }\n    if (!lastUpdateTimeRef.current) {\n      lastUpdateTimeRef.current = time\n    }\n    const deltaTime = time - lastUpdateTimeRef.current\n    progressTimeRef.current += deltaTime\n    if (progressTimeRef.current > speed) {\n      dispatch(moveDown())\n      progressTimeRef.current = 0\n    }\n    lastUpdateTimeRef.current = time\n  }\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(update)\n    return () => cancelAnimationFrame(requestRef.current)\n  }, [isRunning])\n\n  return (\n    <div className='grid-board'>\n      { gridSquares }\n    </div>\n  )\n}\n","import React from 'react'\nimport GridSquare from './GridSquare'\n\nimport { useSelector } from 'react-redux'\nimport { shapes } from '../utils'\n\n// Draws the \"next\" block view showing the next block to drop\nexport default function NextBlock(props) {\n  const nextShape = useSelector( (state) => state.game.nextShape )\n  const box = shapes[nextShape][0]\n\n  // Map the block to the grid\n  const grid = box.map( (rowArray, row) => {\n    return rowArray.map( (square, col) => {\n      return <GridSquare key={`${row}${col}`} color={square === 0 ? 0 : nextShape} />\n    })\n  })\n\n  return (\n    <div>\n      <div className=\"next-title\">Next:</div>\n      <div className=\"next-block\">\n        { grid }\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { pause, resume, restart } from '../actions'\n\nexport default function ScoreBoard(props) {\n  const dispatch = useDispatch()\n  const game = useSelector((state) => state.game)\n  const { score, isRunning, gameOver, lines, level } = game\n\n  return (\n    <div className=\"score-board\">\n      <div>Level: { level }</div>\n      <div>Lines: { lines }</div>\n      <div>Score: { score }</div>\n      <button className=\"score-board-button\" onClick={(e) => {\n        if (gameOver) { return }\n        if (isRunning) {\n          dispatch(pause())\n        } else {\n          dispatch(resume())\n        }\n      }}>{isRunning ? 'Pause' : 'Play'}</button>\n      <button className=\"score-board-button\" onClick={(e) => {\n        dispatch(restart())\n      }}>Restart</button>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { moveDown, moveLeft, moveRight, rotate, rotatePrev, pause, resume, restart } from '../actions'\nimport { controlKeys } from '../utils'\n\nexport default function Controls(props) {\n  const dispatch = useDispatch()\n  const isRunning = useSelector((state) => state.game.isRunning)\n  const gameOver = useSelector((state) => state.game.gameOver)\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return function cleanup() {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n \n  const handleKeyDown = (e) => {\n    if (e.defaultPrevented) return\n\n    // Resume a paused game\n    if (!isRunning) {\n      if (controlKeys.resume.includes(e.key)) {\n        dispatch(resume())\n      }\n      return\n    }\n\n    // Restart after game has ended\n    if (gameOver) {\n      if (controlKeys.restart.includes(e.key)) {\n        dispatch(restart())\n      }\n      return\n    }\n\n    // Pause game\n    if (controlKeys.pause.includes(e.key)) {\n      dispatch(pause())\n      return\n    }\n\n    // Move down\n    if (controlKeys.down.includes(e.key)) dispatch(moveDown())\n\n    // Move left/right\n    if (controlKeys.left.includes(e.key)) dispatch(moveLeft())\n    else if (controlKeys.right.includes(e.key)) dispatch(moveRight())\n\n    // rotate forwards/backwards\n    if (controlKeys.rotate.includes(e.key)) dispatch(rotate())\n    else if (controlKeys.rotatePrev.includes(e.key)) dispatch(rotatePrev())\n\n    e.preventDefault();\n  }\n\n  return (\n    <div className=\"controls\">\n      <button\n        className=\"control-button\"\n        disabled={ !isRunning || gameOver }\n        onClick={ (e) => {\n          if (!isRunning || gameOver) { return }\n          dispatch(moveLeft())\n        }}><img\n          className=\"control-icon\"\n          src={`${process.env.PUBLIC_URL}/icons/arrow-left.svg`}\n          alt=\"Left\"/>\n      </button>\n\n      <button\n        className=\"control-button\"\n        disabled={ !isRunning || gameOver }\n        onClick={ (e) => {\n          if (!isRunning || gameOver) { return }\n          dispatch(moveRight())\n      }}><img\n        className=\"control-icon\"\n        src={`${process.env.PUBLIC_URL}/icons/arrow-right.svg`}\n        alt=\"Right\"/>\n    </button>\n\n      <button\n        className=\"control-button\"\n        disabled={ !isRunning || gameOver }\n        onClick={ (e) => {\n          if (!isRunning || gameOver) { return }\n          dispatch(rotate())\n      }}><img\n        className=\"control-icon\"\n        src={`${process.env.PUBLIC_URL}/icons/arrow-rotate.svg`}\n        alt=\"Rotate\"/>\n    </button>\n\n      <button\n        className=\"control-button\"\n        disabled={ !isRunning || gameOver }\n        onClick={ (e) => {\n          if (!isRunning || gameOver) { return }\n          dispatch(moveDown())\n      }}><img\n        className=\"control-icon\"\n        src={`${process.env.PUBLIC_URL}/icons/arrow-down.svg`}\n        alt=\"Down\"/>\n    </button>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport default function MessagePopup(props) {\n  const isRunning = useSelector((state) => state.game.isRunning)\n  const gameOver = useSelector((state) => state.game.gameOver)\n\n  let message = ''\n  let isHidden = 'hidden'\n\n  if (gameOver) {\n    message = 'Game Over'\n    isHidden = ''\n  } else if (!isRunning) {\n    message = 'Paused'\n    isHidden = ''\n  }\n\n  return (\n    <div className={`message-popup ${ isHidden }`}>\n      <h1>{ message }</h1>\n    </div>\n  )\n}\n","import React from 'react';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducers from './reducers'\n\nimport './App.css';\n\nimport GridBoard from './components/GridBoard'\nimport NextBlock from './components/NextBlock'\nimport ScoreBoard from './components/ScoreBoard'\nimport Controls from './components/Controls'\nimport MessagePopup from './components/MessagePopup'\n\nconst store = createStore(reducers)\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Tetris Redux</h1>\n        </header>\n        <GridBoard />\n        <NextBlock />\n        <ScoreBoard />\n        <Controls />\n        <MessagePopup />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}