{"version":3,"sources":["actions/index.js","utils/index.js","reducers/game-reducer.js","reducers/index.js","components/GridSquare.js","components/GridBoard.js","components/NextBlock.js","components/ScoreBoard.js","components/Controls.js","components/MessagePopup.js","App.js","index.js"],"names":["PAUSE","RESUME","MOVE_LEFT","MOVE_RIGHT","ROTATE","ROTATE_PREV","MOVE_DOWN","GAME_OVER","RESTART","moveRight","type","moveLeft","rotate","moveDown","pause","resume","restart","gridDefault","array","row","push","col","controlKeys","left","right","down","rotatePrev","shapes","randomShape","min","max","length","Math","floor","random","defaultState","grid","shape","rotation","x","y","nextShape","isRunning","score","speed","gameOver","scoreSaved","lines","level","highScore","getHighScore","nextRotation","prevRotation","canMoveTo","currentShape","gridWidth","gridHeight","proposedX","proposedY","possibleRow","undefined","addBlockToGrid","blockOffGrid","block","newGrid","checkRows","completedRows","indexOf","splice","unshift","Array","fill","points","calculateLevel","linesCleared","calculateSpeed","serializedState","localStorage","getItem","JSON","parse","err","saveHighScore","setItem","stringify","console","log","gameReducer","state","action","newCwRotation","newCcwRotation","maybeY","obj","newState","newScore","reducers","combineReducers","game","GridSquare","props","classes","color","className","GridBoard","requestRef","useRef","lastUpdateTimeRef","progressTimeRef","dispatch","useDispatch","useSelector","blockColor","gridSquares","map","rowArray","square","blockX","blockY","k","update","time","current","requestAnimationFrame","deltaTime","useEffect","cancelAnimationFrame","NextBlock","ScoreBoard","onClick","e","Controls","document","addEventListener","handleKeyDown","removeEventListener","defaultPrevented","includes","key","preventDefault","disabled","src","process","alt","MessagePopup","message","isHidden","store","createStore","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"mNAAaA,EAAe,QACfC,EAAe,SACfC,EAAe,YACfC,EAAe,aACfC,EAAe,SACfC,EAAe,cACfC,EAAe,YACfC,EAAe,YACfC,EAAe,UAEfC,EAAY,WACvB,MAAO,CAAEC,KAAMP,IAGJQ,EAAW,WACtB,MAAO,CAAED,KAAMR,IAGJU,EAAS,WACpB,MAAO,CAAEF,KAAMN,IAOJS,EAAW,WACtB,MAAO,CAAEH,KAAMJ,IAGJQ,EAAQ,WACnB,MAAO,CAAEJ,KAAMV,IAGJe,EAAS,WACpB,MAAO,CAAEL,KAAMT,IAGJe,EAAU,WACrB,MAAO,CAAEN,KAAMF,I,OCnCJS,EAAc,WAKzB,IAJA,IAEMC,EAAQ,GAELC,EAAM,EAAGA,EAJL,GAIiBA,IAAO,CACjCD,EAAME,KAAK,IACX,IAAK,IAAIC,EAAM,EAAGA,EALT,GAKqBA,IAC5BH,EAAMC,GAAKC,KAAK,GAItB,OAAOF,GAGII,EAAc,CACzBC,KAAM,CAAC,YAAa,OAAQ,KAC5BC,MAAO,CAAC,aAAc,QAAS,KAC/BC,KAAM,CAAC,YAAa,OAAQ,KAC5Bb,OAAQ,CAAC,UAAW,KAAM,IAAK,KAC/Bc,WAAY,CAAC,IAAK,KAClBZ,MAAO,CAAC,SAAU,SAClBC,OAAQ,CAAC,SAAU,SACnBC,QAAS,CAAC,IAAK,UAGJW,EAAS,CAEpB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,MAGEC,EAAc,WACzB,OA7IqBC,EA6IP,EA7IYC,EA6ITH,EAAOI,OAAS,EA5I1BC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,IAAMA,EADjC,IAACA,EAAKC,GAgJfK,EAAe,WAC1B,MAAO,CAELC,KAAMnB,IAENoB,MAAOT,IAEPU,SAAU,EAEVC,EAAG,EACHC,GAAI,EAEJC,UAAWb,IAEXc,WAAW,EAEXC,MAAO,EAEPC,MAAO,IAEPC,UAAU,EACVC,YAAY,EAEZC,MAAO,EAEPC,MAAO,EACPC,UAAWC,MAIFC,EAAe,SAACd,EAAOC,GAClC,OAAQA,EAAW,GAAKX,EAAOU,GAAON,QAG3BqB,EAAe,SAACf,EAAOC,GAClC,OAAiB,IAAbA,EACKX,EAAOU,GAAON,OAAS,GAExBO,EAAW,GAAKX,EAAOU,GAAON,QAG3BsB,EAAY,SAAChB,EAAOD,EAAMG,EAAGC,EAAGF,GAM3C,IALA,IAAMgB,EAAe3B,EAAOU,GAAOC,GAE7BiB,EAAYnB,EAAK,GAAGL,OAAS,EAC7ByB,EAAapB,EAAKL,OAAS,EAExBZ,EAAM,EAAGA,EAAMmC,EAAavB,OAAQZ,IAC3C,IAAK,IAAIE,EAAM,EAAGA,EAAMiC,EAAanC,GAAKY,OAAQV,IAChD,GAA+B,IAA3BiC,EAAanC,GAAKE,GAAY,CAChC,IAAMoC,EAAYpC,EAAMkB,EAClBmB,EAAYvC,EAAMqB,EAClBmB,EAAcvB,EAAKsB,GACzB,GAAID,EAAY,GAAKA,EAAYF,GAAaG,EAAYF,EACxD,OAAO,EACF,QAAoBI,IAAhBD,GACsB,IAA3BA,EAAYF,GACd,OAAO,EAMjB,OAAO,GAGII,EAAiB,SAACxB,EAAOD,EAAMG,EAAGC,EAAGF,GAIhD,IAHA,IAAIwB,GAAe,EACbC,EAAQpC,EAAOU,GAAOC,GACtB0B,EAAO,YAAQ5B,GACZjB,EAAM,EAAGA,EAAM4C,EAAMhC,OAAQZ,IACpC,IAAK,IAAIE,EAAM,EAAGA,EAAM0C,EAAM5C,GAAKY,OAAQV,IAAO,CAChD,GAAI0C,EAAM5C,GAAKE,GACEF,EAAMqB,EACR,EACXsB,GAAe,EAEfE,EAAQ7C,EAAMqB,GAAGnB,EAAMkB,GAAKF,EAKpC,MAAO,CAAED,KAAM4B,EAASnB,SAAUiB,IAGvBG,EAAY,SAAC7B,GAGxB,IAFA,IACI8B,EAAgB,EACX/C,EAAM,EAAGA,EAAMiB,EAAKL,OAAQZ,KACL,IAA1BiB,EAAKjB,GAAKgD,QAAQ,KACpBD,GAAiB,EACjB9B,EAAKgC,OAAOjD,EAAK,GACjBiB,EAAKiC,QAAQC,MAAM,IAAIC,KAAK,KAGhC,MAAO,CAACC,OATO,CAAC,EAAG,GAAI,IAAK,IAAK,MASVN,GAAgBnB,MAAOmB,IAGnCO,EAAiB,SAACC,GAC7B,OAAO1C,KAAKC,MAAMyC,EAAe,IAGtBC,EAAiB,SAAC3B,GAC7B,OAAIA,GAAS,GACJ,IAAgB,GAARA,EAEV,KAKIE,EAAe,WAC1B,IAEE,IAAM0B,EAAkBC,aAAaC,QALtB,cAMf,OAAwB,OAApBF,EACK,EAGFG,KAAKC,MAAMJ,GAClB,MAAMK,GACN,OAAO,IAIEC,EAAgB,SAACvC,GAC5B,IACE,IAAIM,EAAYC,IAChB,IAAKD,EAEH,YADA4B,aAAaM,QAAQ,aAAcJ,KAAKK,UAAUzC,IAGhDM,EAAYN,GACdkC,aAAaM,QAAQ,aAAcJ,KAAKK,UAAUzC,IAGpD,MAAMsC,GACNI,QAAQC,IAAIL,KCtLDM,EAlFK,WAAqC,IAApCC,EAAmC,uDAA3BrD,IAAgBsD,EAAW,uCAC9CpD,EAA8FmD,EAA9FnD,MAAOD,EAAuFoD,EAAvFpD,KAAMG,EAAiFiD,EAAjFjD,EAAGC,EAA8EgD,EAA9EhD,EAAGF,EAA2EkD,EAA3ElD,SAAUG,EAAiE+C,EAAjE/C,UAAWE,EAAsD6C,EAAtD7C,MAAOD,EAA+C8C,EAA/C9C,UAAWK,EAAoCyC,EAApCzC,MAAOC,EAA6BwC,EAA7BxC,MAAOJ,EAAsB4C,EAAtB5C,MAAOE,EAAe0C,EAAf1C,WACvF,OAAO2C,EAAO/E,MACV,KAAKN,EACH,IAAMsF,EAAgBvC,EAAad,EAAOC,GAC1C,OAAIe,EAAUhB,EAAOD,EAAMG,EAAGC,EAAGkD,GACtB,2BAAKF,GAAZ,IAAmBlD,SAAUoD,IAE1BF,EAET,KAAKnF,EACH,IAAMsF,EAAiBvC,EAAaf,EAAOC,GAC3C,OAAIe,EAAUhB,EAAOD,EAAMG,EAAGC,EAAGmD,GACtB,2BAAKH,GAAZ,IAAmBlD,SAAUqD,IAE1BH,EAET,KAAKrF,EACH,OAAIkD,EAAUhB,EAAOD,EAAMG,EAAI,EAAGC,EAAGF,GAC5B,2BAAKkD,GAAZ,IAAmBjD,EAAGA,EAAI,IAErBiD,EAET,KAAKtF,EACH,OAAImD,EAAUhB,EAAOD,EAAMG,EAAI,EAAGC,EAAGF,GAC5B,2BAAKkD,GAAZ,IAAmBjD,EAAGA,EAAI,IAErBiD,EAET,KAAKlF,EACH,IAAMsF,EAASpD,EAAI,EACnB,GAAIa,EAAUhB,EAAOD,EAAMG,EAAGqD,EAAQtD,GACpC,OAAO,2BAAKkD,GAAZ,IAAmBhD,EAAGoD,IAExB,IAAMC,EAAMhC,EAAexB,EAAOD,EAAMG,EAAGC,EAAGF,GACxC0B,EAAU6B,EAAIzD,KACdS,EAAWgD,EAAIhD,SAErB,GAAIA,EAAU,CACZ,IAAMiD,EAAQ,eAAQN,GAGtB,OAFAM,EAASzD,MAAQ,EACjByD,EAAS1D,KAAO4B,EACXlB,EAIE,2BAAK0C,GAAZ,IAAmB3C,UAAU,KAH3BqC,EAAcvC,GACP,2BAAK6C,GAAZ,IAAmB3C,UAAU,EAAMC,YAAY,KAKnD,IAAMgD,EAAW3D,IACjB2D,EAAS1D,KAAO4B,EAChB8B,EAASzD,MAAQI,EACjBqD,EAASnD,MAAQA,EACjBmD,EAASpD,UAAYA,EACrBoD,EAAS/C,MAAQA,EACjB+C,EAAS9C,MAAQA,EACjB8C,EAASlD,MAAQA,EAEjB,IAAMmD,EAAW9B,EAAUD,GAM3B,OALA8B,EAASnD,MAAQA,EAASoD,EAASvB,QAAUxB,EAAQ,GACrD8C,EAAS/C,MAAQA,EAAQgD,EAAShD,MAClC+C,EAAS9C,MAAQyB,EAAeqB,EAAS/C,OACzC+C,EAASlD,MAAQ+B,EAAemB,EAAS9C,OAElC8C,EAET,KAAK7F,EACH,OAAO,2BAAKuF,GAAZ,IAAmB9C,WAAW,IAEhC,KAAK1C,EACH,OAAO,2BAAKwF,GAAZ,IAAmB9C,WAAW,IAEhC,KAAKnC,EACH,OAAOiF,EAET,KAAKhF,EACH,OAAO2B,IAET,QACE,OAAOqD,ICxFAQ,EAJEC,YAAgB,CAC/BC,KAAMX,I,eCFO,SAASY,EAAWC,GACjC,IAAMC,EAAO,4BAAwBD,EAAME,OAC3C,OAAO,qBAAKC,UAAWF,ICGV,SAASG,EAAUJ,GAChC,IAAMK,EAAaC,mBACbC,EAAoBD,iBAAO,GAC3BE,EAAkBF,iBAAO,GACzBG,EAAWC,cACXZ,EAAOa,aAAY,SAACvB,GAAD,OAAWA,EAAMU,QAClC9D,EAAkD8D,EAAlD9D,KAAMC,EAA4C6D,EAA5C7D,MAAOC,EAAqC4D,EAArC5D,SAAUC,EAA2B2D,EAA3B3D,EAAGC,EAAwB0D,EAAxB1D,EAAGE,EAAqBwD,EAArBxD,UAAWE,EAAUsD,EAAVtD,MAE1CmB,EAAQpC,EAAOU,GAAOC,GACtB0E,EAAa3E,EAEb4E,EAAc7E,EAAK8E,KAAI,SAACC,EAAUhG,GACtC,OAAOgG,EAASD,KAAI,SAACE,EAAQ/F,GAE3B,IAAMgG,EAAShG,EAAMkB,EACf+E,EAASnG,EAAMqB,EACjB8D,EAAQc,EAERC,GAAU,GAAKA,EAAStD,EAAMhC,QAAUuF,GAAU,GAAKA,EAASvD,EAAMhC,SACxEuE,EAAkC,IAA1BvC,EAAMuD,GAAQD,GAAgBf,EAAQU,GAGhD,IAAMO,EAAIpG,EAAMiB,EAAK,GAAGL,OAASV,EACjC,OAAO,cAAC8E,EAAD,CAAoBG,MAAOA,GAAViB,SAItBC,EAAS,SAATA,EAAUC,GAEd,GADAhB,EAAWiB,QAAUC,sBAAsBH,GACtC9E,EAAL,CAGKiE,EAAkBe,UACrBf,EAAkBe,QAAUD,GAE9B,IAAMG,EAAYH,EAAOd,EAAkBe,QAC3Cd,EAAgBc,SAAWE,EACvBhB,EAAgBc,QAAU9E,IAC5BiE,EAAShG,KACT+F,EAAgBc,QAAU,GAE5Bf,EAAkBe,QAAUD,IAQ9B,OALAI,qBAAU,WAER,OADApB,EAAWiB,QAAUC,sBAAsBH,GACpC,kBAAMM,qBAAqBrB,EAAWiB,YAC5C,CAAChF,IAGF,qBAAK6D,UAAU,aAAf,SACIU,ICpDO,SAASc,EAAU3B,GAChC,IAAM3D,EAAYsE,aAAa,SAACvB,GAAD,OAAWA,EAAMU,KAAKzD,aAI/CL,EAHMT,EAAOc,GAAW,GAGbyE,KAAK,SAACC,EAAUhG,GAC/B,OAAOgG,EAASD,KAAK,SAACE,EAAQ/F,GAC5B,OAAO,cAAC8E,EAAD,CAAiCG,MAAkB,IAAXc,EAAe,EAAI3E,GAA3D,UAAoBtB,GAApB,OAA0BE,UAIrC,OACE,gCACE,qBAAKkF,UAAU,aAAf,mBACA,qBAAKA,UAAU,aAAf,SACInE,OCjBK,SAAS4F,EAAW5B,GACjC,IAAMS,EAAWC,cACXZ,EAAOa,aAAY,SAACvB,GAAD,OAAWA,EAAMU,QAClCvD,EAAwDuD,EAAxDvD,MAAOD,EAAiDwD,EAAjDxD,UAAWG,EAAsCqD,EAAtCrD,SAAUE,EAA4BmD,EAA5BnD,MAAOC,EAAqBkD,EAArBlD,MAAOC,EAAciD,EAAdjD,UAElD,OACE,sBAAKsD,UAAU,cAAf,UACE,0CAAcvD,KACd,0CAAcD,KACd,0CAAcJ,KACd,wBAAQ4D,UAAU,qBAAqB0B,QAAS,SAACC,GAC3CrF,GAEFgE,EADEnE,EACO5B,IAEAC,MALb,SAOI2B,EAAY,QAAU,SAC1B,wBAAQ6D,UAAU,qBAAqB0B,QAAS,SAACC,GAC/CrB,EAAS7F,MADX,qBAGA,+CAAmBgB,KAAKF,IAAIa,EAAOM,SCpB1B,SAASkF,EAAS/B,GAC/B,IAAMS,EAAWC,cACXpE,EAAYqE,aAAY,SAACvB,GAAD,OAAWA,EAAMU,KAAKxD,aAC9CG,EAAWkE,aAAY,SAACvB,GAAD,OAAWA,EAAMU,KAAKrD,YAEnDgF,qBAAU,WAER,OADAO,SAASC,iBAAiB,UAAWC,GAC9B,WACLF,SAASG,oBAAoB,UAAWD,OAI5C,IAAMA,EAAgB,SAACJ,GACjBA,EAAEM,mBAGD9F,EAQDG,EACEvB,EAAYN,QAAQyH,SAASP,EAAEQ,MACjC7B,EAAS7F,KAMTM,EAAYR,MAAM2H,SAASP,EAAEQ,KAC/B7B,EAAS/F,MAKPQ,EAAYG,KAAKgH,SAASP,EAAEQ,MAAM7B,EAAShG,KAG3CS,EAAYC,KAAKkH,SAASP,EAAEQ,KAAM7B,EAASlG,KACtCW,EAAYE,MAAMiH,SAASP,EAAEQ,MAAM7B,EAASpG,KAGjDa,EAAYV,OAAO6H,SAASP,EAAEQ,KAAM7B,EAASjG,KACxCU,EAAYI,WAAW+G,SAASP,EAAEQ,MAAM7B,ER7B5C,CAAEnG,KAAML,IQ+Bb6H,EAAES,kBA/BIrH,EAAYP,OAAO0H,SAASP,EAAEQ,MAChC7B,EAAS9F,OAiCf,OACE,sBAAKwF,UAAU,WAAf,UACE,wBACEA,UAAU,iBACVqC,UAAYlG,GAAaG,EACzBoF,QAAU,SAACC,GACJxF,IAAaG,GAClBgE,EAASlG,MALb,SAMK,qBACD4F,UAAU,eACVsC,IAAG,UAAKC,UAAL,yBACHC,IAAI,WAGR,wBACExC,UAAU,iBACVqC,UAAYlG,GAAaG,EACzBoF,QAAU,SAACC,GACJxF,IAAaG,GAClBgE,EAASpG,MALb,SAMG,qBACD8F,UAAU,eACVsC,IAAG,UAAKC,UAAL,0BACHC,IAAI,YAGN,wBACExC,UAAU,iBACVqC,UAAYlG,GAAaG,EACzBoF,QAAU,SAACC,GACJxF,IAAaG,GAClBgE,EAASjG,MALb,SAMG,qBACD2F,UAAU,eACVsC,IAAG,UAAKC,UAAL,2BACHC,IAAI,aAGN,wBACExC,UAAU,iBACVqC,UAAYlG,GAAaG,EACzBoF,QAAU,SAACC,GACJxF,IAAaG,GAClBgE,EAAShG,MALb,SAMG,qBACD0F,UAAU,eACVsC,IAAG,UAAKC,UAAL,yBACHC,IAAI,cCrGG,SAASC,EAAa5C,GACnC,IAAM1D,EAAYqE,aAAY,SAACvB,GAAD,OAAWA,EAAMU,KAAKxD,aAGhDuG,EAAU,GACVC,EAAW,SAUf,OAbiBnC,aAAY,SAACvB,GAAD,OAAWA,EAAMU,KAAKrD,aAMjDoG,EAAU,YACVC,EAAW,IACDxG,IACVuG,EAAU,SACVC,EAAW,IAIX,qBAAK3C,UAAS,wBAAoB2C,GAAlC,SACE,6BAAMD,MCPZ,IAAME,EAAQC,YAAYpD,GAmBXqD,MAjBf,WACE,OACE,cAAC,IAAD,CAAUF,MAAOA,EAAjB,SACE,sBAAK5C,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,oBAAIA,UAAU,YAAd,4BAEF,cAACC,EAAD,IACA,cAACuB,EAAD,IACA,cAACC,EAAD,IACA,cAACG,EAAD,IACA,cAACa,EAAD,UCrBRM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,W","file":"static/js/main.b285368f.chunk.js","sourcesContent":["export const PAUSE        = \"PAUSE\"       // Pause the game\nexport const RESUME       = \"RESUME\"      // Resume a paused game\nexport const MOVE_LEFT    = \"MOVE_LEFT\"   // Move piece left\nexport const MOVE_RIGHT   = \"MOVE_RIGHT\"  // Move piece right\nexport const ROTATE       = \"ROTATE\"      // Rotate piece\nexport const ROTATE_PREV  = \"ROTATE_PREV\"      // Rotate piece\nexport const MOVE_DOWN    = \"MOVE_DOWN\"   // Move piece down\nexport const GAME_OVER    = \"GAME_OVER\"   // The game is over\nexport const RESTART      = \"RESTART\"     // Restart Game\n\nexport const moveRight = () => {\n  return { type: MOVE_RIGHT }\n}\n\nexport const moveLeft = () => {\n  return { type: MOVE_LEFT }\n}\n\nexport const rotate = () => {\n  return { type: ROTATE }\n}\n\nexport const rotatePrev = () => {\n  return { type: ROTATE_PREV }\n}\n\nexport const moveDown = () => {\n  return { type: MOVE_DOWN }\n}\n\nexport const pause = () => {\n  return { type: PAUSE }\n}\n\nexport const resume = () => {\n  return { type: RESUME }\n}\n\nexport const restart = () => {\n  return { type: RESTART }\n}\n","export const random = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport const gridDefault = () => {\n  const rows = 18\n  const cols = 10\n  const array = []\n\n  for (let row = 0; row < rows; row++) {\n      array.push([])\n      for (let col = 0; col < cols; col++) {\n        array[row].push(0)\n      }\n  }\n\n  return array\n}\n\nexport const controlKeys = {\n  left: [\"ArrowLeft\", \"Left\", \"a\"],\n  right: [\"ArrowRight\", \"Right\", \"d\"],\n  down: [\"ArrowDown\", \"Down\", \"s\"],\n  rotate: [\"ArrowUp\", \"Up\", \"w\", \"x\"],\n  rotatePrev: [\"q\", \"z\"],\n  pause: [\"Escape\", \"Enter\"],\n  resume: [\"Escape\", \"Enter\"],\n  restart: [\" \", \"Enter\"]\n}\n\nexport const shapes = [\n  // none\n  [[[0,0,0,0],\n    [0,0,0,0],\n    [0,0,0,0],\n    [0,0,0,0]]],\n\n  // I\n  [[[0,0,0,0],\n    [1,1,1,1],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,0,0],\n    [0,1,0,0],\n    [0,1,0,0]]],\n\n  // T\n  [[[0,0,0,0],\n    [1,1,1,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [1,1,0,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [1,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,1,0],\n    [0,1,0,0],\n    [0,0,0,0]]],\n\n  // L\n  [[[0,0,0,0],\n    [1,1,1,0],\n    [1,0,0,0],\n    [0,0,0,0]],\n\n   [[1,1,0,0],\n    [0,1,0,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,0,1,0],\n    [1,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,0,0],\n    [0,1,1,0],\n    [0,0,0,0]]],\n\n  // J\n  [[[1,0,0,0],\n    [1,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,1,0],\n    [0,1,0,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,0,0,0],\n    [1,1,1,0],\n    [0,0,1,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,0,0],\n    [1,1,0,0],\n    [0,0,0,0]]],\n\n  // Z\n  [[[0,0,0,0],\n    [1,1,0,0],\n    [0,1,1,0],\n    [0,0,0,0]],\n\n   [[0,0,1,0],\n    [0,1,1,0],\n    [0,1,0,0],\n    [0,0,0,0]]],\n\n  // S\n  [[[0,0,0,0],\n    [0,1,1,0],\n    [1,1,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,1,0],\n    [0,0,1,0],\n    [0,0,0,0]]],\n\n  // O\n  [[[0,1,1,0],\n    [0,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]]]\n]\n\nexport const randomShape = () => {\n  return random(1, shapes.length - 1)\n}\n\nexport const defaultState = () => {\n  return {\n    // Create an empty grid\n    grid: gridDefault(),\n    // Get a new random shape\n    shape: randomShape(),\n    // set rotation of the shape to 0\n    rotation: 0,\n    // center of the grid, above the top\n    x: 4,\n    y: -4,\n    // set the index of the next shape to a new random shape\n    nextShape: randomShape(),\n    // Tell the game that it's currently running\n    isRunning: true,\n    // Set the score to 0\n    score: 0,\n    // Set the default speed\n    speed: 1000,\n    // Game isn't over yet\n    gameOver: false,\n    scoreSaved: false,\n    // Rows completed\n    lines: 0,\n    // level\n    level: 0,\n    highScore: getHighScore()\n  }\n}\n\nexport const nextRotation = (shape, rotation) => {\n  return (rotation + 1) % shapes[shape].length\n}\n\nexport const prevRotation = (shape, rotation) => {\n  if (rotation === 0) {\n    return shapes[shape].length - 1\n  }\n  return (rotation - 1) % shapes[shape].length\n}\n\nexport const canMoveTo = (shape, grid, x, y, rotation) => {\n  const currentShape = shapes[shape][rotation]\n\n  const gridWidth = grid[0].length - 1\n  const gridHeight = grid.length - 1\n\n  for (let row = 0; row < currentShape.length; row++) {\n    for (let col = 0; col < currentShape[row].length; col++) {\n      if (currentShape[row][col] !== 0) {\n        const proposedX = col + x\n        const proposedY = row + y\n        const possibleRow = grid[proposedY]\n        if (proposedX < 0 || proposedX > gridWidth || proposedY > gridHeight) {\n          return false\n        } else if (possibleRow !== undefined) {\n          if (possibleRow[proposedX] !== 0) {\n            return false\n          }\n        }\n      }\n    }\n  }\n  return true\n}\n\nexport const addBlockToGrid = (shape, grid, x, y, rotation) => {\n  let blockOffGrid = false\n  const block = shapes[shape][rotation]\n  const newGrid = [ ...grid ]\n  for (let row = 0; row < block.length; row++) {\n    for (let col = 0; col < block[row].length; col++) {\n      if (block[row][col]) {\n        const yIndex = row + y\n        if (yIndex < 0) {\n          blockOffGrid = true\n        } else {\n          newGrid[row + y][col + x] = shape\n        }\n      }\n    }\n  }\n  return { grid: newGrid, gameOver: blockOffGrid }\n}\n\nexport const checkRows = (grid) => {\n  const points = [0, 40, 100, 300, 1200]\n  let completedRows = 0\n  for (let row = 0; row < grid.length; row++) {\n    if (grid[row].indexOf(0) === -1) {\n      completedRows += 1\n      grid.splice(row, 1)\n      grid.unshift(Array(10).fill(0))\n    }\n  }\n  return {points: points[completedRows], lines: completedRows}\n}\n\nexport const calculateLevel = (linesCleared) => {\n  return Math.floor(linesCleared / 4)\n}\n\nexport const calculateSpeed = (level) => {\n  if (level <= 18) {\n    return 1000 - (level * 50)\n  }\n  return 100\n}\n\nconst HIGH_SCORE = \"HIGH_SCORE\"\n\nexport const getHighScore = () => {\n  try {\n  // Grab the state from local storage\n    const serializedState = localStorage.getItem(HIGH_SCORE)\n    if (serializedState === null) {\n      return 0\n    }\n    // convert the string into JSON for the Redux store\n    return JSON.parse(serializedState)\n  } catch(err) {\n    return 0\n  }\n}\n\nexport const saveHighScore = (score) => {\n  try {\n    let highScore = getHighScore()\n    if (!highScore) {\n      localStorage.setItem(\"HIGH_SCORE\", JSON.stringify(score))\n      return\n    }\n    if (highScore < score) {\n      localStorage.setItem(\"HIGH_SCORE\", JSON.stringify(score))\n    }\n\n  } catch(err) {\n    console.log(err)\n  }\n}\n","import {\n  MOVE_RIGHT, MOVE_LEFT, MOVE_DOWN, ROTATE,\n  ROTATE_PREV, PAUSE, RESUME, RESTART, GAME_OVER\n} from '../actions'\n\nimport {\n  defaultState,\n  nextRotation,\n  prevRotation,\n  canMoveTo,\n  addBlockToGrid,\n  checkRows,\n  calculateLevel,\n  calculateSpeed,\n  saveHighScore\n} from '../utils'\n\nconst gameReducer = (state = defaultState(), action) => {\n  const { shape, grid, x, y, rotation, nextShape, score, isRunning, lines, level, speed, scoreSaved } = state\n  switch(action.type) {\n      case ROTATE:\n        const newCwRotation = nextRotation(shape, rotation)\n        if (canMoveTo(shape, grid, x, y, newCwRotation)) {\n            return { ...state, rotation: newCwRotation }\n        }\n        return state\n\n      case ROTATE_PREV:\n        const newCcwRotation = prevRotation(shape, rotation)\n        if (canMoveTo(shape, grid, x, y, newCcwRotation)) {\n            return { ...state, rotation: newCcwRotation }\n        }\n        return state\n\n      case MOVE_RIGHT:\n        if (canMoveTo(shape, grid, x + 1, y, rotation)) {\n          return { ...state, x: x + 1 }\n        }\n        return state\n\n      case MOVE_LEFT:\n        if (canMoveTo(shape, grid, x - 1, y, rotation)) {\n          return { ...state, x: x - 1 }\n        }\n        return state\n\n      case MOVE_DOWN:\n        const maybeY = y + 1\n        if (canMoveTo(shape, grid, x, maybeY, rotation)) {\n          return { ...state, y: maybeY }\n        }\n        const obj = addBlockToGrid(shape, grid, x, y, rotation)\n        const newGrid = obj.grid\n        const gameOver = obj.gameOver\n\n        if (gameOver) {\n          const newState = { ...state }\n          newState.shape = 0\n          newState.grid = newGrid\n          if (!scoreSaved) {\n            saveHighScore(score)\n            return { ...state, gameOver: true, scoreSaved: true }\n          }\n          return { ...state, gameOver: true }\n        }\n\n        const newState = defaultState()\n        newState.grid = newGrid\n        newState.shape = nextShape\n        newState.score = score\n        newState.isRunning = isRunning\n        newState.lines = lines\n        newState.level = level\n        newState.speed = speed\n\n        const newScore = checkRows(newGrid)\n        newState.score = score + (newScore.points * (level + 1))\n        newState.lines = lines + newScore.lines\n        newState.level = calculateLevel(newState.lines)\n        newState.speed = calculateSpeed(newState.level)\n\n        return newState\n\n      case RESUME:\n        return { ...state, isRunning: true }\n\n      case PAUSE:\n        return { ...state, isRunning: false }\n\n      case GAME_OVER:\n        return state\n\n      case RESTART:\n        return defaultState()\n\n      default:\n        return state\n    }\n}\nexport default gameReducer\n","import { combineReducers } from 'redux'\nimport gameReducer from './game-reducer'\n\n// The state handled by `gameReducer` will be stored with the property name `game` on the Redux store.\nconst reducers = combineReducers({\n  game: gameReducer\n})\n\nexport default reducers\n","import React from 'react'\n\n// Represents a grid square with a color\nexport default function GridSquare(props) {\n  const classes = `grid-square color-${props.color}`\n  return <div className={classes} />\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { moveDown } from '../actions'\nimport { shapes } from '../utils'\n\nimport GridSquare from './GridSquare'\n\n\nexport default function GridBoard(props) {\n  const requestRef = useRef()\n  const lastUpdateTimeRef = useRef(0)\n  const progressTimeRef = useRef(0)\n  const dispatch = useDispatch()\n  const game = useSelector((state) => state.game)\n  const { grid, shape, rotation, x, y, isRunning, speed } = game\n\n  const block = shapes[shape][rotation]\n  const blockColor = shape\n\n  const gridSquares = grid.map((rowArray, row) => {\n    return rowArray.map((square, col) => {\n\n      const blockX = col - x\n      const blockY = row - y\n      let color = square\n\n      if (blockX >= 0 && blockX < block.length && blockY >= 0 && blockY < block.length) {\n        color = block[blockY][blockX] === 0 ? color : blockColor\n      }\n\n      const k = row * grid[0].length + col;\n      return <GridSquare key={k} color={color} />\n    })\n  })\n\n  const update = (time) => {\n    requestRef.current = requestAnimationFrame(update)\n    if (!isRunning) {\n      return\n    }\n    if (!lastUpdateTimeRef.current) {\n      lastUpdateTimeRef.current = time\n    }\n    const deltaTime = time - lastUpdateTimeRef.current\n    progressTimeRef.current += deltaTime\n    if (progressTimeRef.current > speed) {\n      dispatch(moveDown())\n      progressTimeRef.current = 0\n    }\n    lastUpdateTimeRef.current = time\n  }\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(update)\n    return () => cancelAnimationFrame(requestRef.current)\n  }, [isRunning])\n\n  return (\n    <div className='grid-board'>\n      { gridSquares }\n    </div>\n  )\n}\n","import React from 'react'\nimport GridSquare from './GridSquare'\n\nimport { useSelector } from 'react-redux'\nimport { shapes } from '../utils'\n\n// Draws the \"next\" block view showing the next block to drop\nexport default function NextBlock(props) {\n  const nextShape = useSelector( (state) => state.game.nextShape )\n  const box = shapes[nextShape][0]\n\n  // Map the block to the grid\n  const grid = box.map( (rowArray, row) => {\n    return rowArray.map( (square, col) => {\n      return <GridSquare key={`${row}${col}`} color={square === 0 ? 0 : nextShape} />\n    })\n  })\n\n  return (\n    <div>\n      <div className=\"next-title\">Next:</div>\n      <div className=\"next-block\">\n        { grid }\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { pause, resume, restart } from '../actions'\n\nexport default function ScoreBoard(props) {\n  const dispatch = useDispatch()\n  const game = useSelector((state) => state.game)\n  const { score, isRunning, gameOver, lines, level, highScore } = game\n\n  return (\n    <div className=\"score-board\">\n      <div>Level: { level }</div>\n      <div>Lines: { lines }</div>\n      <div>Score: { score }</div>\n      <button className=\"score-board-button\" onClick={(e) => {\n        if (gameOver) { return }\n        if (isRunning) {\n          dispatch(pause())\n        } else {\n          dispatch(resume())\n        }\n      }}>{isRunning ? 'Pause' : 'Play'}</button>\n      <button className=\"score-board-button\" onClick={(e) => {\n        dispatch(restart())\n      }}>Restart</button>\n      <div>High Score: { Math.max(score, highScore) }</div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { moveDown, moveLeft, moveRight, rotate, rotatePrev, pause, resume, restart } from '../actions'\nimport { controlKeys } from '../utils'\n\nexport default function Controls(props) {\n  const dispatch = useDispatch()\n  const isRunning = useSelector((state) => state.game.isRunning)\n  const gameOver = useSelector((state) => state.game.gameOver)\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return function cleanup() {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n \n  const handleKeyDown = (e) => {\n    if (e.defaultPrevented) return\n\n    // Resume a paused game\n    if (!isRunning) {\n      if (controlKeys.resume.includes(e.key)) {\n        dispatch(resume())\n      }\n      return\n    }\n\n    // Restart after game has ended\n    if (gameOver) {\n      if (controlKeys.restart.includes(e.key)) {\n        dispatch(restart())\n      }\n      return\n    }\n\n    // Pause game\n    if (controlKeys.pause.includes(e.key)) {\n      dispatch(pause())\n      return\n    }\n\n    // Move down\n    if (controlKeys.down.includes(e.key)) dispatch(moveDown())\n\n    // Move left/right\n    if (controlKeys.left.includes(e.key)) dispatch(moveLeft())\n    else if (controlKeys.right.includes(e.key)) dispatch(moveRight())\n\n    // rotate forwards/backwards\n    if (controlKeys.rotate.includes(e.key)) dispatch(rotate())\n    else if (controlKeys.rotatePrev.includes(e.key)) dispatch(rotatePrev())\n\n    e.preventDefault();\n  }\n\n  return (\n    <div className=\"controls\">\n      <button\n        className=\"control-button\"\n        disabled={ !isRunning || gameOver }\n        onClick={ (e) => {\n          if (!isRunning || gameOver) { return }\n          dispatch(moveLeft())\n        }}><img\n          className=\"control-icon\"\n          src={`${process.env.PUBLIC_URL}/icons/arrow-left.svg`}\n          alt=\"Left\"/>\n      </button>\n\n      <button\n        className=\"control-button\"\n        disabled={ !isRunning || gameOver }\n        onClick={ (e) => {\n          if (!isRunning || gameOver) { return }\n          dispatch(moveRight())\n      }}><img\n        className=\"control-icon\"\n        src={`${process.env.PUBLIC_URL}/icons/arrow-right.svg`}\n        alt=\"Right\"/>\n    </button>\n\n      <button\n        className=\"control-button\"\n        disabled={ !isRunning || gameOver }\n        onClick={ (e) => {\n          if (!isRunning || gameOver) { return }\n          dispatch(rotate())\n      }}><img\n        className=\"control-icon\"\n        src={`${process.env.PUBLIC_URL}/icons/arrow-rotate.svg`}\n        alt=\"Rotate\"/>\n    </button>\n\n      <button\n        className=\"control-button\"\n        disabled={ !isRunning || gameOver }\n        onClick={ (e) => {\n          if (!isRunning || gameOver) { return }\n          dispatch(moveDown())\n      }}><img\n        className=\"control-icon\"\n        src={`${process.env.PUBLIC_URL}/icons/arrow-down.svg`}\n        alt=\"Down\"/>\n    </button>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport default function MessagePopup(props) {\n  const isRunning = useSelector((state) => state.game.isRunning)\n  const gameOver = useSelector((state) => state.game.gameOver)\n\n  let message = ''\n  let isHidden = 'hidden'\n\n  if (gameOver) {\n    message = 'Game Over'\n    isHidden = ''\n  } else if (!isRunning) {\n    message = 'Paused'\n    isHidden = ''\n  }\n\n  return (\n    <div className={`message-popup ${ isHidden }`}>\n      <h1>{ message }</h1>\n    </div>\n  )\n}\n","import React from 'react';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducers from './reducers'\n\nimport './App.css';\n\nimport GridBoard from './components/GridBoard'\nimport NextBlock from './components/NextBlock'\nimport ScoreBoard from './components/ScoreBoard'\nimport Controls from './components/Controls'\nimport MessagePopup from './components/MessagePopup'\n\nconst store = createStore(reducers)\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Tetris Redux</h1>\n        </header>\n        <GridBoard />\n        <NextBlock />\n        <ScoreBoard />\n        <Controls />\n        <MessagePopup />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}